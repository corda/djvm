plugins {
    id 'org.jetbrains.kotlin.jvm' apply false
    id 'net.corda.plugins.publish-utils'
    id 'com.jfrog.artifactory'
    id 'org.owasp.dependencycheck'
    id 'com.gradle.build-scan'
}

import static org.gradle.api.JavaVersion.*
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

ext {
    artifactory_contextUrl = 'https://software.r3.com/artifactory'
}

subprojects {
    group 'net.corda.djvm'
    version corda_djvm_version

    repositories {
        mavenCentral()
        jcenter()
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = VERSION_1_8
        targetCompatibility = VERSION_1_8
        options.encoding = 'UTF-8'
        options.compilerArgs << '-XDenableSunApiLintControl' << '-Werror'
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            languageVersion = '1.2'
            apiVersion = '1.2'
            jvmTarget = VERSION_1_8
            freeCompilerArgs = ['-Xjvm-default=enable']
            allWarningsAsErrors = true
        }
    }

    tasks.withType(Jar) { task ->
        manifest {
            attributes('Corda-Vendor': 'Corda Open Source')
            attributes('Automatic-Module-Name': "net.corda.${task.project.name.replaceAll('-', '.')}")
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()

        // Prevent the project from creating temporary files outside of the build directory.
        systemProperty 'java.io.tmpdir', buildDir.absolutePath

        // Configure the host timezone to match the DJVM's.
        systemProperty 'user.timezone', 'UTC'

        // Choose which garbage-collector to use.
        jvmArgs '-XX:+UseG1GC'
    }
}

bintrayConfig {
    user = System.getenv('CORDA_BINTRAY_USER')
    key = System.getenv('CORDA_BINTRAY_KEY')
    repo = 'corda'
    org = 'r3'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/corda/djvm'
    projectUrl = 'https://github.com/corda/djvm'
    gpgSign = true
    gpgPassphrase = System.getenv('CORDA_BINTRAY_GPG_PASSPHRASE')
    publications = [
        'corda-djvm',
        'corda-djvm-cli'
    ]
    license {
        name = 'Apache-2.0'
        url = 'https://www.apache.org/licenses/LICENSE-2.0'
        distribution = 'repo'
    }
    developer {
        id = 'R3'
        name = 'R3'
        email = 'dev@corda.net'
    }
}

artifactory {
    publish {
        contextUrl = artifactory_contextUrl
        repository {
            repoKey = 'corda-dev'
            username = System.getenv('CORDA_ARTIFACTORY_USERNAME')
            password = System.getenv('CORDA_ARTIFACTORY_PASSWORD')
        }

        defaults {
            // The root project has applied 'publish-utils' but has nothing to publish.
            if (project != rootProject) {
                publications(project.extensions.publish.name())
            }
        }
    }
}

wrapper {
    gradleVersion = "5.6.3"
    distributionType = Wrapper.DistributionType.ALL
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}
